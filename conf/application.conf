# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="CHANGEME12345678-1mnqahqnn50pl03c041bkdekki846elut6lemt8pjgiu8ocaafkk"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# Default to Routes in the root package.
# application.routers=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:mem;MODE=PostgreSQL;IGNORECASE=TRUE;DATABASE_TO_UPPER=FALSE;DB_CLOSE_DELAY=-1"
db.default.user=sa

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# PatchWerk
# ~~~~~~~~~
# Settings specific to PatchWerk Radio
metapiano.puredata="/Applications/Pd-extended.app/Contents/Resources/bin/pd"
metapiano.port=12345
metapiano.logfile="logfile/pd.log"

metapiano.masterpatch="master.pd"
metapiano.masterpatchfolder="/Users/guy/src/metapiano-server/masterpatch"

metapiano.patchfolder="/Users/guy/src/metapiano-server/patches"
metapiano.poemfolder="/Users/guy/src/metapiano-server/poems"
metapiano.extrapaths=[]

# States
# ~~~~~~~~~
# These are the states that the patch will move through

metapiano.statechanger.firststate="patches"

metapiano.statechanger.state.patches.duration=1
metapiano.statechanger.state.patches.message=["statename", "patches"]
metapiano.statechanger.state.patches.nextstate="poems"

metapiano.statechanger.state.poems.duration=1
metapiano.statechanger.state.poems.message=["statename", "poems"]
metapiano.statechanger.state.poems.nextstate="keyboard"

metapiano.statechanger.state.keyboard.duration=1
metapiano.statechanger.state.keyboard.message=["statename", "keyboard"]
metapiano.statechanger.state.keyboard.nextstate="patches"

# Site
# ~~~~~~~
# Anything relating to the main site

metapiano.site.poemendpoint="http://localhost:9000/endpoint/poems/latest"
metapiano.site.poemidparam="latestId"

