#N canvas 713 522 881 569 10;
#N canvas 273 491 675 577 network-interface 0;
#X obj 340 184 spigot 0;
#X obj 261 229 list prepend send;
#X obj 261 255 list trim;
#X obj 394 297 t f f;
#X obj 340 161 inlet;
#X obj 394 329 outlet;
#X obj 116 83 r startup;
#X msg 116 164 connect localhost \$1;
#X obj 116 108 route port;
#X obj 261 285 netclient;
#X obj 348 372 outlet;
#X msg 261 433 \; pd dsp \$1;
#X obj 288 391 spigot;
#X obj 261 349 route dsp debug;
#X obj 304 371 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 261 318 t a a;
#X obj 288 412 s \$0-debug;
#X obj 261 104 r \$0-debug;
#X obj 261 127 list prepend debug main;
#X obj 116 135 pipe 1000;
#X obj 302 318 print cstatus;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 9 0;
#X connect 3 0 5 0;
#X connect 3 1 0 1;
#X connect 4 0 0 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 19 0;
#X connect 9 0 15 0;
#X connect 9 1 3 0;
#X connect 9 1 20 0;
#X connect 12 0 16 0;
#X connect 13 0 11 0;
#X connect 13 1 14 0;
#X connect 13 2 10 0;
#X connect 14 0 12 1;
#X connect 15 0 13 0;
#X connect 15 1 12 0;
#X connect 17 0 18 0;
#X connect 18 0 1 0;
#X connect 19 0 7 0;
#X restore 319 71 pd network-interface;
#X obj 319 36 r toserver;
#X obj 167 208 patchplay;
#X obj 61 206 poemplay;
#N canvas 1455 719 640 512 statechange 0;
#X obj 185 43 inlet;
#X obj 108 419 outlet;
#X obj 110 197 symbol;
#X obj 32 101 inlet;
#X obj 27 138 t b;
#X obj 108 307 route patches poems keyboard;
#X obj 108 340 t b;
#X msg 108 373 patchload;
#X obj 182 337 t b;
#X obj 295 421 outlet;
#X msg 182 370 poemload;
#X msg 311 367 start;
#X msg 243 370 stop;
#X obj 295 336 t b;
#X text 163 192 we keep track of the state here. only change state
when the poem/patch has finished \, or the keyboard patch pings;
#X obj 172 286 print statechecked;
#X obj 144 168 list;
#X obj 206 112 spigot 1;
#X msg 268 112 0;
#X obj 209 72 t b a;
#X obj 206 137 t b b;
#X text 258 75 the first message goes straight through;
#X obj 196 448 print changing;
#X msg 230 418 keyboard;
#X obj 113 233 list trim;
#X connect 0 0 19 0;
#X connect 2 0 24 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 5 1 8 0;
#X connect 5 2 13 0;
#X connect 6 0 7 0;
#X connect 6 0 12 0;
#X connect 7 0 1 0;
#X connect 7 0 22 0;
#X connect 8 0 10 0;
#X connect 8 0 12 0;
#X connect 10 0 1 0;
#X connect 10 0 22 0;
#X connect 11 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 11 0;
#X connect 13 0 23 0;
#X connect 16 0 2 1;
#X connect 17 0 20 0;
#X connect 18 0 17 1;
#X connect 19 0 17 0;
#X connect 19 1 16 0;
#X connect 20 0 4 0;
#X connect 20 1 18 0;
#X connect 23 0 22 0;
#X connect 24 0 5 0;
#X connect 24 0 15 0;
#X restore 308 195 pd statechange;
#X obj 112 174 route poem patch;
#X obj 286 284 s toserver;
#X obj 233 153 r checkstate;
#X obj 92 248 route finished;
#X obj 92 275 t b;
#X obj 92 301 s checkstate;
#X obj 426 239 keyboard;
#X obj 480 295 s checkstate;
#X obj 273 440 piano;
#X text 312 441 this will communicate with the piano;
#X text 493 237 this will receive input from the keyboard;
#X obj 153 35 print msg-from-server;
#X obj 197 117 route load changestate;
#X obj 403 48 print toserver;
#X obj 436 95 sel 1;
#X msg 436 120 started;
#X obj 436 145 s toserver;
#X text 72 322 when a poem/patch has finished \, we check to see what
the state everything is;
#X obj 19 249 s topiano;
#X obj 406 272 s topiano;
#X obj 274 402 r topiano;
#X obj 206 258 s topiano;
#X connect 0 0 16 0;
#X connect 0 0 17 0;
#X connect 0 1 19 0;
#X connect 1 0 0 0;
#X connect 1 0 18 0;
#X connect 2 0 26 0;
#X connect 2 1 8 0;
#X connect 3 0 23 0;
#X connect 3 1 8 0;
#X connect 4 0 6 0;
#X connect 4 1 11 0;
#X connect 5 0 3 0;
#X connect 5 1 2 0;
#X connect 7 0 4 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 11 0 24 0;
#X connect 11 1 12 0;
#X connect 17 0 5 0;
#X connect 17 1 4 1;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 25 0 13 0;
